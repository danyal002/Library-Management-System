/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.sql.Types;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author danyal
 */
public class BookCheckin extends javax.swing.JFrame {

    ArrayList<Long> book_serials = new ArrayList<>();
    ArrayList<Integer> book_fines = new ArrayList<>();
    String book_checkout, book_checkin;
    int indv_fines = 0;

    public BookCheckin() {
        initComponents();
        getContentPane().setBackground(new Color(255, 255, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        book_id = new javax.swing.JTextField();
        book_search = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cart = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        return_date = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        update = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 205, 60));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Courier", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Check In A Book");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 10, 860, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 60));

        book_id.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        book_id.setText("2000000000000");
        getContentPane().add(book_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 410, 40));

        book_search.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        book_search.setText("add");
        book_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        book_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                book_searchMouseClicked(evt);
            }
        });
        getContentPane().add(book_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 360, -1, 40));

        cart.setBackground(new java.awt.Color(255, 255, 255));
        cart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Due Date", "Fines Incurred"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cart);
        if (cart.getColumnModel().getColumnCount() > 0) {
            cart.getColumnModel().getColumn(0).setResizable(false);
            cart.getColumnModel().getColumn(1).setResizable(false);
            cart.getColumnModel().getColumn(2).setResizable(false);
        }
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.LEFT);
        cart.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
        cart.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        cart.getColumnModel().getColumn(0).setPreferredWidth(200);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 680, 150));

        jLabel3.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 205, 60));
        jLabel3.setText("Date of Return:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 240, 40));
        getContentPane().add(return_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, 180, 40));
        return_date.setDate(new java.util.Date());

        jLabel6.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 205, 60));
        jLabel6.setText("Enter Book Serial Number:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 240, 40));

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 205, 60)));
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setBackground(new java.awt.Color(255, 205, 60));
        jLabel4.setFont(new java.awt.Font("Courier", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 205, 60));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update");
        update.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 100, 50));

        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, 140, 50));

        setBounds(0, 0, 860, 597);
    }// </editor-fold>//GEN-END:initComponents

    private void book_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_book_searchMouseClicked
        book_checkin = General.dateToString((LocalDateTime.ofInstant(return_date.getDate().toInstant(), ZoneId.systemDefault())));
//        System.out.println(book_checkin);

        try {
            //get connection
            Connection conn = General.getCon();
            conn.setAutoCommit(false);

            long book_isbn = 0L; //used in second query to get book JSON file
            String jsonFile = ""; //used to save the JSON data into

            //first query to get book isbn used in the second step
            PreparedStatement pst = conn.prepareStatement("Select book_isbn from book_status where book_id=?");
            pst.setLong(1, Long.parseLong(book_id.getText()));
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                book_isbn = rs.getLong("book_isbn");
                book_serials.add(Long.parseLong(book_id.getText()));
            }

            //second query to get book data (JSON) to retrieve the book name from
            PreparedStatement pst2 = conn.prepareStatement("Select book_data from book_data where book_isbn=?");
            pst2.setLong(1, book_isbn);
            ResultSet rs2 = pst2.executeQuery();
            while (rs2.next()) {
                jsonFile = rs2.getString("book_data");
            }

            //third query to get the book_checkout date to be used to calculate fines below
            PreparedStatement pst3 = conn.prepareStatement("Select checked_out from transactions where book_id=? and checked_in is null and fines_incurred is null");
            pst3.setLong(1, Long.parseLong(book_id.getText()));
            ResultSet rs3 = pst3.executeQuery();
            while (rs3.next()) {
                book_checkout = rs3.getString("checked_out");
            }
            conn.commit();

            //calculate fines
            indv_fines = (General.getDuration(book_checkout, book_checkin)) * General.FINES_PER_DAY; // 2 is the rate of fines. x amount per day.
            book_fines.add(indv_fines);

            //Add data to the table
            String book_name = General.getValueFJ("name", jsonFile);
            DefaultTableModel dtm = (DefaultTableModel) cart.getModel();
            dtm.addRow(new Object[]{book_name, book_checkout, indv_fines}); //change second value

        } catch (SQLException ex) {
            Logger.getLogger(BookCheckout.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_book_searchMouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        try {
            Connection conn = General.getCon();
            conn.setAutoCommit(false);

            //Update book_status in the book_status table. Set book availibility to true.
            PreparedStatement pst = conn.prepareStatement("Update book_status set book_status=? where book_id=?");
            for (Long serial : book_serials) {
                pst.setBoolean(1, true);
                pst.setLong(2, serial);
                pst.addBatch();
            }
            int[] r = pst.executeBatch();

            //Update transactions table with checked_in dates and update fines_incurred with fines.
            PreparedStatement pst2 = conn.prepareStatement("Update transactions set checked_in=?, fines_incurred=? where book_id=?");
            for (int i = 0; i < book_serials.size(); i++) {
                pst2.setString(1, book_checkin);
                pst2.setInt(2, book_fines.get(i));
                pst2.setLong(3, book_serials.get(i));
                pst2.addBatch();
            }
            int[] r2 = pst2.executeBatch();

            conn.commit();

            if (r2.length == book_serials.size() && r.length == book_serials.size()) {
                System.out.println("SUCCESS");
            }

        } catch (SQLException ex) {
            Logger.getLogger(BookCheckin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookCheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookCheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookCheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookCheckin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookCheckin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField book_id;
    private javax.swing.JLabel book_search;
    private javax.swing.JTable cart;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser return_date;
    private javax.swing.JPanel update;
    // End of variables declaration//GEN-END:variables
}
